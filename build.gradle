plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.patti'
version = '0.0.1-SNAPSHOT'
gradle
java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.4'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.4'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.4' // or 'io.jsonwebtoken:jjwt-gson:0.12.4' for gson

    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
// https://mvnrepository.com/artifact/jakarta.inject/jakarta.inject-api
    implementation group: 'jakarta.inject', name: 'jakarta.inject-api', version: '2.0.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
